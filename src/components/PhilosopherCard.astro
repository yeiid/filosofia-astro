---
export interface Props {
  filosofo: {
    id: number;
    nombre: string;
    epoca: string;
    escuela: string;
    biografia: string;
    obras_principales: string[];
    imagen_url?: string;
    fecha_nacimiento?: string;
    fecha_muerte?: string;
  };
  showDetails?: boolean;
}

const { filosofo, showDetails = false } = Astro.props;
---

<div class="philosopher-card group">
  <div class="p-6">
    <!-- Avatar -->
    <div class="w-20 h-20 bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform duration-300">
      {filosofo.imagen_url ? (
        <img 
          src={filosofo.imagen_url} 
          alt={filosofo.nombre}
          class="w-full h-full rounded-full object-cover"
        />
      ) : (
        <span class="text-blue-600 dark:text-blue-300 font-bold text-2xl">
          {filosofo.nombre.charAt(0)}
        </span>
      )}
    </div>

    <!-- Name and Era -->
    <h3 class="text-xl font-bold text-center text-gray-900 dark:text-white mb-2 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors">
      {filosofo.nombre}
    </h3>
    <p class="text-sm text-center text-blue-600 mb-3">{filosofo.epoca}</p>
    
    <!-- School -->
    <p class="text-sm text-center text-gray-600 dark:text-gray-400 mb-4">
      {filosofo.escuela}
    </p>

    <!-- Biography (truncated) -->
    <p class="text-sm text-gray-600 dark:text-gray-300 text-center mb-4 line-clamp-3">
      {filosofo.biografia}
    </p>

    <!-- Dates -->
    {filosofo.fecha_nacimiento && (
      <div class="text-xs text-center text-gray-500 mb-4">
        {filosofo.fecha_nacimiento}
        {filosofo.fecha_muerte && ` - ${filosofo.fecha_muerte}`}
      </div>
    )}

    <!-- Main Works (if showDetails is true) -->
    {showDetails && filosofo.obras_principales.length > 0 && (
      <div class="mb-4">
        <h4 class="text-sm font-semibold text-gray-900 dark:text-white mb-2">
          Obras Principales:
        </h4>
        <ul class="text-xs text-gray-600 dark:text-gray-400 space-y-1">
          {filosofo.obras_principales.slice(0, 3).map(obra => (
            <li class="flex items-center">
              <span class="w-1 h-1 bg-blue-500 rounded-full mr-2"></span>
              {obra}
            </li>
          ))}
          {filosofo.obras_principales.length > 3 && (
            <li class="text-gray-500 italic">
              +{filosofo.obras_principales.length - 3} más...
            </li>
          )}
        </ul>
      </div>
    )}

    <!-- Action Button -->
    <div class="text-center">
      <button class="text-blue-600 hover:text-blue-700 dark:hover:text-blue-400 text-sm font-medium transition-colors">
        {showDetails ? 'Ver menos' : 'Leer más'}
      </button>
    </div>
  </div>
</div>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
