---
import Layout from '../layouts/Layout.astro';
import { supabase } from '../lib/supabase';

// Obtener la sesión actual
const { data: { session } } = await supabase.auth.getSession();

// Si el usuario ya está autenticado, redirigir al perfil
if (session) {
  return Astro.redirect('/perfil');
}

// Obtener el correo electrónico del almacenamiento local (si está disponible)
const email = typeof window !== 'undefined' ? localStorage.getItem('emailForSignIn') || 'tu correo electrónico' : 'tu correo electrónico';
---

<Layout title="Verifica tu correo - Filosofía Interactiva">
  <main class="min-h-screen gradient-bg flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8 text-center">
      <div class="mx-auto w-16 h-16 bg-blue-100 dark:bg-blue-900/30 rounded-full flex items-center justify-center mb-6">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-blue-600 dark:text-blue-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
        </svg>
      </div>
      
      <h1 class="text-3xl font-bold text-gray-900 dark:text-white">
        Verifica tu correo electrónico
      </h1>
      
      <p class="mt-4 text-gray-600 dark:text-gray-300">
        Hemos enviado un enlace de verificación a <span class="font-medium text-gray-900 dark:text-white">{email}</span>.
      </p>
      
      <p class="text-gray-600 dark:text-gray-400">
        Haz clic en el enlace del correo para activar tu cuenta y comenzar a explorar Filosofía Interactiva.
      </p>
      
      <div class="mt-8 border-t border-gray-200 dark:border-gray-700 pt-6">
        <p class="text-sm text-gray-500 dark:text-gray-400">
          ¿No recibiste el correo? Revisa tu carpeta de spam o 
          <button 
            id="resendButton"
            class="text-blue-600 dark:text-blue-400 font-medium hover:underline focus:outline-none"
          >
            reenviar verificación
          </button>
        </p>
        
        <div id="resendSuccess" class="mt-3 hidden">
          <p class="text-sm text-green-600 dark:text-green-400">
            ✔ Se ha enviado un nuevo correo de verificación.
          </p>
        </div>
        
        <div id="resendError" class="mt-3 hidden">
          <p class="text-sm text-red-600 dark:text-red-400">
            Error al reenviar el correo. Intenta de nuevo más tarde.
          </p>
        </div>
      </div>
      
      <div class="mt-8 text-center">
        <a 
          href="/login" 
          class="text-blue-600 dark:text-blue-400 font-medium hover:underline"
        >
          ← Volver al inicio de sesión
        </a>
      </div>
    </div>
  </main>
</Layout>

<script>
  // Solo ejecutar en el cliente
  if (typeof window !== 'undefined') {
    document.addEventListener('astro:page-load', () => {
      const resendButton = document.getElementById('resendButton');
      const resendSuccess = document.getElementById('resendSuccess');
      const resendError = document.getElementById('resendError');
      
      if (resendButton) {
        resendButton.addEventListener('click', async () => {
          if (resendButton.disabled) return;
          
          const email = localStorage.getItem('emailForSignIn');
          if (!email) {
            if (resendError) {
              resendError.classList.remove('hidden');
              setTimeout(() => resendError.classList.add('hidden'), 5000);
            }
            return;
          }
          
          // Deshabilitar el botón temporalmente
          resendButton.disabled = true;
          const originalText = resendButton.textContent;
          resendButton.textContent = 'Enviando...';
          
          try {
            // Importar dinámicamente para evitar problemas de SSR
            const { supabase } = await import('../lib/supabase');
            
            // Reenviar el correo de verificación
            const { error } = await supabase.auth.resend({
              type: 'signup',
              email: email,
              options: {
                emailRedirectTo: `${window.location.origin}/perfil`
              }
            });
            
            if (error) throw error;
            
            // Mostrar mensaje de éxito
            if (resendSuccess) {
              resendSuccess.classList.remove('hidden');
              setTimeout(() => resendSuccess.classList.add('hidden'), 5000);
            }
            
          } catch (error) {
            console.error('Error al reenviar el correo:', error);
            
            // Mostrar mensaje de error
            if (resendError) {
              resendError.classList.remove('hidden');
              setTimeout(() => resendError.classList.add('hidden'), 5000);
            }
            
          } finally {
            // Restaurar el botón después de 30 segundos
            setTimeout(() => {
              resendButton.disabled = false;
              resendButton.textContent = originalText;
            }, 30000);
            
            // Actualizar el texto del botón mientras está deshabilitado
            let seconds = 30;
            const countdown = setInterval(() => {
              seconds--;
              if (seconds > 0) {
                resendButton.textContent = `Reenviar en ${seconds}s`;
              } else {
                clearInterval(countdown);
                resendButton.textContent = 'Reenviar verificación';
              }
            }, 1000);
          }
        });
      }
    });
  }
</script>
