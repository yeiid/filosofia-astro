---
import Layout from '../layouts/Layout.astro';
import { supabase, auth } from '../lib/supabase.ts';

export const prerender = false;

// Probar conexi√≥n con Supabase
let connectionStatus = 'Verificando...';
let authStatus = 'Verificando...';

try {
  // Probar conexi√≥n b√°sica
  const { data, error } = await supabase.from('_dummy_table').select('*').limit(1);
  if (error && error.code === 'PGRST116') {
    // Error esperado - tabla no existe, pero conexi√≥n funciona
    connectionStatus = '‚úÖ Conexi√≥n exitosa (tabla de prueba no existe)';
  } else if (error) {
    connectionStatus = `‚ùå Error de conexi√≥n: ${error.message}`;
  } else {
    connectionStatus = '‚úÖ Conexi√≥n exitosa';
  }
} catch (error) {
  connectionStatus = `‚ùå Error cr√≠tico: ${error.message}`;
}

// Probar autenticaci√≥n
try {
  const { session } = await auth.getCurrentSession();
  if (session) {
    authStatus = `‚úÖ Usuario autenticado: ${session.user.email}`;
  } else {
    authStatus = '‚ÑπÔ∏è No hay sesi√≥n activa';
  }
} catch (error) {
  authStatus = `‚ùå Error de autenticaci√≥n: ${error.message}`;
}
---

<Layout title="Prueba de Supabase - Filosof√≠a Interactiva">
  <main class="min-h-screen gradient-bg">
    <div class="container mx-auto px-4 py-8">
      <div class="max-w-2xl mx-auto">
        <h1 class="text-4xl font-bold text-center text-gray-900 dark:text-white mb-8">
          üîß Pruebas de Supabase
        </h1>
        
        <div class="space-y-6">
          <!-- Estado de Conexi√≥n -->
          <div class="card">
            <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">
              Estado de Conexi√≥n
            </h2>
            <div class="p-4 bg-gray-50 dark:bg-gray-800 rounded-lg">
              <p class="text-lg">{connectionStatus}</p>
            </div>
          </div>

          <!-- Estado de Autenticaci√≥n -->
          <div class="card">
            <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">
              Estado de Autenticaci√≥n
            </h2>
            <div class="p-4 bg-gray-50 dark:bg-gray-800 rounded-lg">
              <p class="text-lg">{authStatus}</p>
            </div>
          </div>

          <!-- Variables de Entorno -->
          <div class="card">
            <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">
              Variables de Entorno
            </h2>
            <div class="p-4 bg-gray-50 dark:bg-gray-800 rounded-lg space-y-2">
              <p><strong>PUBLIC_SUPABASE_URL:</strong> 
                {import.meta.env.PUBLIC_SUPABASE_URL ? '‚úÖ Configurada' : '‚ùå No configurada'}
              </p>
              <p><strong>PUBLIC_SUPABASE_ANON_KEY:</strong> 
                {import.meta.env.PUBLIC_SUPABASE_ANON_KEY ? '‚úÖ Configurada' : '‚ùå No configurada'}
              </p>
            </div>
          </div>

          <!-- Pruebas de Funcionalidad -->
          <div class="card">
            <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">
              Pruebas de Funcionalidad
            </h2>
            <div class="space-y-4">
              <a href="/" class="btn-primary block text-center">
                üè† Ir a P√°gina Principal
              </a>
              <a href="/login" class="btn-primary block text-center">
                üîê Probar Login
              </a>
              <a href="/registro" class="btn-primary block text-center">
                üìù Probar Registro
              </a>
              <a href="/perfil" class="btn-primary block text-center">
                üë§ Probar Perfil (requiere auth)
              </a>
            </div>
          </div>

          <!-- Informaci√≥n de Desarrollo -->
          <div class="card">
            <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">
              Informaci√≥n de Desarrollo
            </h2>
            <div class="p-4 bg-gray-50 dark:bg-gray-800 rounded-lg space-y-2 text-sm">
              <p><strong>Modo:</strong> {import.meta.env.DEV ? 'Desarrollo' : 'Producci√≥n'}</p>
              <p><strong>Base URL:</strong> {import.meta.env.BASE_URL}</p>
              <p><strong>Site:</strong> {import.meta.env.SITE}</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  import { auth, supabase } from '../lib/supabase.ts';

  // Pruebas adicionales del lado del cliente
  console.log('üîß Iniciando pruebas del lado del cliente...');

  // Probar funciones de autenticaci√≥n
  async function testAuthFunctions() {
    try {
      console.log('üì° Probando funciones de autenticaci√≥n...');
      
      // Probar obtener sesi√≥n actual
      const { session } = await auth.getCurrentSession();
      console.log('üìã Sesi√≥n actual:', session ? 'Activa' : 'No activa');
      
      // Probar obtener usuario actual
      const { user } = await auth.getCurrentUser();
      console.log('üë§ Usuario actual:', user ? user.email : 'No autenticado');
      
      // Probar listener de cambios de auth
      supabase.auth.onAuthStateChange((event, session) => {
        console.log('üîÑ Cambio de estado de auth:', event, session ? 'Con sesi√≥n' : 'Sin sesi√≥n');
      });
      
    } catch (error) {
      console.error('‚ùå Error en pruebas de auth:', error);
    }
  }

  // Ejecutar pruebas cuando se carga la p√°gina
  testAuthFunctions();
</script>
