---
import Layout from '../layouts/Layout.astro';
import { supabase } from '../lib/supabase';

// Obtener la sesión actual
const { data: { session } } = await supabase.auth.getSession();

// Si el usuario ya está autenticado, redirigir a la página de perfil
if (session) {
  return Astro.redirect('/perfil');
}

// Obtener mensaje de error si existe
const error = Astro.url.searchParams.get('error');
---

<Layout title="Registro - Filosofía Interactiva">
  <main class="min-h-screen gradient-bg flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8">
      <div class="text-center">
        <a href="/" class="inline-block mb-4">
          <div class="w-12 h-12 bg-blue-600 rounded-lg flex items-center justify-center mx-auto">
            <span class="text-white font-bold text-2xl">Φ</span>
          </div>
        </a>
        <h2 class="text-3xl font-bold text-gray-900 dark:text-white">
          Crear Cuenta
        </h2>
        <p class="mt-2 text-sm text-gray-600 dark:text-gray-400">
          Únete a nuestra comunidad filosófica
        </p>
      </div>

      {error && (
        <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4" role="alert">
          <p>{error === 'email_exists' ? 'Este correo ya está registrado. Intenta iniciar sesión.' : 'Error en el registro. Por favor, inténtalo de nuevo.'}</p>
        </div>
      )}

      <div class="card">
        <form class="space-y-6" id="registroForm">
          <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
            <div>
              <label for="nombre" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                Nombre
              </label>
              <input
                id="nombre"
                name="nombre"
                type="text"
                required
                class="input-field"
                placeholder="Tu nombre"
              />
            </div>
            <div>
              <label for="apellido" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                Apellido
              </label>
              <input
                id="apellido"
                name="apellido"
                type="text"
                required
                class="input-field"
                placeholder="Tu apellido"
              />
            </div>
          </div>

          <div>
            <label for="email" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
              Correo Electrónico
            </label>
            <input
              id="email"
              name="email"
              type="email"
              required
              class="input-field"
              placeholder="tu@email.com"
            />
          </div>

          <div>
            <label for="password" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
              Contraseña
            </label>
            <input
              id="password"
              name="password"
              type="password"
              required
              class="input-field"
              placeholder="••••••••"
              minlength="8"
            />
            <p class="mt-1 text-xs text-gray-500 dark:text-gray-400">
              Mínimo 8 caracteres
            </p>
          </div>

          <div>
            <label for="confirmPassword" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
              Confirmar Contraseña
            </label>
            <input
              id="confirmPassword"
              name="confirmPassword"
              type="password"
              required
              class="input-field"
              placeholder="••••••••"
            />
          </div>

          <div>
            <label for="interes" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
              Área de Interés Filosófico
            </label>
            <select
              id="interes"
              name="interes"
              class="input-field"
            >
              <option value="">Selecciona una opción</option>
              <option value="etica">Ética</option>
              <option value="metafisica">Metafísica</option>
              <option value="epistemologia">Epistemología</option>
              <option value="politica">Filosofía Política</option>
              <option value="estetica">Estética</option>
              <option value="logica">Lógica</option>
              <option value="filosofia-antigua">Filosofía Antigua</option>
              <option value="filosofia-moderna">Filosofía Moderna</option>
              <option value="filosofia-contemporanea">Filosofía Contemporánea</option>
            </select>
          </div>

          <div class="flex items-center">
            <input
              id="terms"
              name="terms"
              type="checkbox"
              required
              class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
            />
            <label for="terms" class="ml-2 block text-sm text-gray-700 dark:text-gray-300">
              Acepto los{' '}
              <a href="#" class="text-blue-600 hover:text-blue-500">términos y condiciones</a>
              {' '}y la{' '}
              <a href="#" class="text-blue-600 hover:text-blue-500">política de privacidad</a>
            </label>
          </div>

          <div>
            <button
              type="submit"
              class="w-full btn-primary py-3"
            >
              Crear Cuenta
            </button>
          </div>

          <div class="text-center">
            <p class="text-sm text-gray-600 dark:text-gray-400">
              ¿Ya tienes una cuenta?{' '}
              <a href="/login" class="font-medium text-blue-600 hover:text-blue-500">
                Inicia sesión aquí
              </a>
            </p>
          </div>
        </form>

        <!-- Social Registration -->
        <div class="mt-6">
          <div class="relative">
            <div class="absolute inset-0 flex items-center">
              <div class="w-full border-t border-gray-300 dark:border-gray-600"></div>
            </div>
            <div class="relative flex justify-center text-sm">
              <span class="px-2 bg-white dark:bg-gray-800 text-gray-500">O regístrate con</span>
            </div>
          </div>

          <div class="mt-6 grid grid-cols-1 gap-3">
            <button
              type="button"
              class="w-full inline-flex justify-center py-2 px-4 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm bg-white dark:bg-gray-800 text-sm font-medium text-gray-500 hover:bg-gray-50 dark:hover:bg-gray-700"
            >
              <svg class="w-5 h-5" viewBox="0 0 24 24">
                <path fill="currentColor" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
                <path fill="currentColor" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
                <path fill="currentColor" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
                <path fill="currentColor" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
              </svg>
              <span class="ml-2">Google</span>
            </button>
          </div>
        </div>
      </div>
    </div>
  </main>
</Layout>

<!-- Script para manejar el envío del formulario de registro -->
<script>
  // Solo ejecutar en el cliente
  if (typeof window !== 'undefined') {
    document.addEventListener('astro:page-load', () => {
      const form = document.getElementById('registroForm');
      const errorElement = document.getElementById('registro-error');
      const passwordField = document.getElementById('password');
      const confirmPasswordField = document.getElementById('confirmPassword');
      
      // Validar que las contraseñas coincidan en tiempo real
      if (passwordField && confirmPasswordField) {
        const validatePasswordMatch = () => {
          if (passwordField.value !== confirmPasswordField.value) {
            confirmPasswordField.setCustomValidity('Las contraseñas no coinciden');
          } else {
            confirmPasswordField.setCustomValidity('');
          }
        };
        
        passwordField.addEventListener('input', validatePasswordMatch);
        confirmPasswordField.addEventListener('input', validatePasswordMatch);
      }
      
      if (form) {
        form.addEventListener('submit', async (e) => {
          e.preventDefault();
          
          const submitButton = form.querySelector('button[type="submit"]');
          const formData = new FormData(form);
          
          // Validación del formulario
          if (!form.checkValidity()) {
            // Si el formulario no es válido, mostrar mensajes de validación nativos
            form.reportValidity();
            return;
          }
          
          const email = formData.get('email')?.toString() || '';
          const password = formData.get('password')?.toString() || '';
          const confirmPassword = formData.get('confirmPassword')?.toString() || '';
          const nombre = formData.get('nombre')?.toString() || '';
          const apellido = formData.get('apellido')?.toString() || '';
          
          // Validar que las contraseñas coincidan (por si la validación del navegador falla)
          if (password !== confirmPassword) {
            if (errorElement) {
              errorElement.textContent = 'Las contraseñas no coinciden';
              errorElement.classList.remove('hidden');
            }
            return;
          }
          
          // Deshabilitar el botón de envío
          if (submitButton) {
            submitButton.disabled = true;
            submitButton.textContent = 'Registrando...';
          }
          
          try {
            // Importar dinámicamente para evitar problemas de SSR
            const { supabase } = await import('../lib/supabase');
            
            // Registrar al usuario
            const { data, error } = await supabase.auth.signUp({
              email,
              password,
              options: {
                data: {
                  nombre,
                  apellido,
                  full_name: `${nombre} ${apellido}`.trim()
                },
                emailRedirectTo: `${window.location.origin}/perfil`
              }
            });
            
            if (error) throw error;
            
            // Si el registro fue exitoso, redirigir a la página de verificación de correo
            if (data.user) {
              // Almacenar el email en el almacenamiento local para mostrarlo en la página de verificación
              localStorage.setItem('emailForSignIn', email);
              
              // Redirigir a la página de verificación de correo
              window.location.href = '/verificar-email';
            }
            
          } catch (error) {
            console.error('Error en el registro:', error);
            
            // Manejar errores específicos
            let errorMessage = 'Error en el registro. Por favor, inténtalo de nuevo.';
            
            if (error.message?.includes('already registered')) {
              errorMessage = 'Este correo ya está registrado. Intenta iniciar sesión.';
              window.location.href = `/login?error=email_exists&email=${encodeURIComponent(email)}`;
              return;
            } else if (error.message?.includes('Password should be at least')) {
              errorMessage = 'La contraseña debe tener al menos 6 caracteres.';
            } else if (error.message?.includes('Invalid email')) {
              errorMessage = 'Por favor, ingresa un correo electrónico válido.';
            }
            
            // Mostrar mensaje de error
            if (errorElement) {
              errorElement.textContent = errorMessage;
              errorElement.classList.remove('hidden');
            } else {
              alert(errorMessage);
            }
            
          } finally {
            // Rehabilitar el botón de envío
            if (submitButton) {
              submitButton.disabled = false;
              submitButton.textContent = 'Crear Cuenta';
            }
          }
        });
      }
    });
  }
</script>
