// Script de prueba para verificar la conexi√≥n con Supabase
import { createClient } from '@supabase/supabase-js';

console.log('üîß Iniciando pruebas de conexi√≥n con Supabase...\n');

// Verificar variables de entorno
const supabaseUrl = process.env.PUBLIC_SUPABASE_URL || 'https://placeholder.supabase.co';
const supabaseAnonKey = process.env.PUBLIC_SUPABASE_ANON_KEY || 'placeholder-key';

console.log('üìã Variables de entorno:');
console.log(`  URL: ${supabaseUrl}`);
console.log(`  Key: ${supabaseAnonKey.substring(0, 20)}...`);
console.log('');

// Crear cliente de Supabase
const supabase = createClient(supabaseUrl, supabaseAnonKey);

// Funci√≥n para probar conexi√≥n
async function testConnection() {
  try {
    console.log('üîå Probando conexi√≥n con Supabase...');
    
    // Intentar una consulta simple
    const { data: _data, error } = await supabase
      .from('_dummy_table')
      .select('*')
      .limit(1);
    
    if (error) {
      if (error.code === 'PGRST116') {
        console.log('‚úÖ Conexi√≥n exitosa (error esperado: tabla no existe)');
        console.log(`   Mensaje: ${error.message}`);
      } else {
        console.log('‚ùå Error de conexi√≥n:');
        console.log(`   C√≥digo: ${error.code}`);
        console.log(`   Mensaje: ${error.message}`);
      }
    } else {
      console.log('‚úÖ Conexi√≥n exitosa');
    }
    
  } catch (error) {
    if (error instanceof Error) {
      console.log('‚ùå Error cr√≠tico de conexi√≥n:');
      console.log(`   ${error.message}`);
    } else {
      console.log('‚ùå Error cr√≠tico de conexi√≥n: Ocurri√≥ un error desconocido.');
    }
  }
}

// Funci√≥n para probar autenticaci√≥n
async function testAuth() {
  try {
    console.log('\nüîê Probando autenticaci√≥n...');
    
    // Obtener sesi√≥n actual
    const { data: { session }, error: sessionError } = await supabase.auth.getSession();
    
    if (sessionError) {
      console.log('‚ùå Error al obtener sesi√≥n:');
      console.log(`   ${sessionError.message}`);
    } else {
      if (session) {
        console.log('‚úÖ Sesi√≥n activa encontrada');
        console.log(`   Usuario: ${session.user.email}`);
      } else {
        console.log('‚ÑπÔ∏è No hay sesi√≥n activa');
      }
    }
    
    // Obtener usuario actual
    const { data: { user }, error: userError } = await supabase.auth.getUser();
    
    if (userError) {
      console.log('‚ùå Error al obtener usuario:');
      console.log(`   ${userError.message}`);
    } else {
      if (user) {
        console.log('‚úÖ Usuario autenticado:');
        console.log(`   ID: ${user.id}`);
        console.log(`   Email: ${user.email}`);
      } else {
        console.log('‚ÑπÔ∏è No hay usuario autenticado');
      }
    }
    
  } catch (error) {
    if (error instanceof Error) {
      console.log('‚ùå Error en pruebas de autenticaci√≥n:');
      console.log(`   ${error.message}`);
    } else {
      console.log('‚ùå Error en pruebas de autenticaci√≥n: Ocurri√≥ un error desconocido.');
    }
  }
}

// Funci√≥n para probar registro de usuario
async function testSignUp() {
  try {
    console.log('\nüìù Probando registro de usuario...');
    
    const testEmail = `test-${Date.now()}@example.com`;
    const testPassword = 'testpassword123';
    
    const { data: _data, error } = await supabase.auth.signUp({
      email: testEmail,
      password: testPassword
    });
    
    if (error) {
      console.log('‚ùå Error en registro:');
      console.log(`   ${error.message}`);
    } else {
      console.log('‚úÖ Registro exitoso (simulado)');
      console.log(`   Email: ${testEmail}`);
      console.log('   Nota: En desarrollo, esto puede fallar sin configuraci√≥n real');
    }
    
  } catch (error) {
    if (error instanceof Error) {
      console.log('‚ùå Error cr√≠tico en registro:');
      console.log(`   ${error.message}`);
    } else {
      console.log('‚ùå Error cr√≠tico en registro: Ocurri√≥ un error desconocido.');
    }
  }
}

// Ejecutar todas las pruebas
async function runAllTests() {
  await testConnection();
  await testAuth();
  await testSignUp();
  
  console.log('\nüéâ Pruebas completadas!');
  console.log('\nüìù Para probar la aplicaci√≥n web:');
  console.log('   1. Abre http://localhost:4321 en tu navegador');
  console.log('   2. Ve a http://localhost:4321/test-supabase para m√°s pruebas');
  console.log('   3. Revisa la consola del navegador para logs adicionales');
}

runAllTests();
